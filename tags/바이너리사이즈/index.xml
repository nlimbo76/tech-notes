<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>바이너리사이즈 on gBear's Tech Notes</title><link>https://nlimbo76.github.io/tech-notes/tags/%EB%B0%94%EC%9D%B4%EB%84%88%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A6%88/</link><description>Recent content in 바이너리사이즈 on gBear's Tech Notes</description><generator>Hugo -- 0.148.2</generator><language>ko-kr</language><lastBuildDate>Sun, 24 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://nlimbo76.github.io/tech-notes/tags/%EB%B0%94%EC%9D%B4%EB%84%88%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A6%88/index.xml" rel="self" type="application/rss+xml"/><item><title>IoT 타깃 소형화 전략: 바이너리·메모리 최적화 체크리스트</title><link>https://nlimbo76.github.io/tech-notes/posts/iot-binary-size-optimization/</link><pubDate>Sun, 24 Aug 2025 00:00:00 +0000</pubDate><guid>https://nlimbo76.github.io/tech-notes/posts/iot-binary-size-optimization/</guid><description>&lt;h2 id="개요">개요&lt;/h2>
&lt;p>플래시/램이 작은 IoT 보드에서 &lt;strong>1KB가 제품 기능 하나를 살리기도&lt;/strong> 합니다.&lt;br>
아래 체크리스트를 순서대로 적용하면, 빌드만 바꿔도 &lt;strong>수~수십 %&lt;/strong> 사이즈 절감이 가능해집니다.&lt;/p>
&lt;hr>
&lt;h2 id="1-컴파일러링커-플래그">1) 컴파일러/링커 플래그&lt;/h2>
&lt;ul>
&lt;li>컴파일: &lt;code>-Os -ffunction-sections -fdata-sections&lt;/code>&lt;/li>
&lt;li>링커: &lt;code>-Wl,--gc-sections&lt;/code>&lt;/li>
&lt;li>LTO: &lt;code>-flto&lt;/code> (+ 링커가 LTO 대응인지 확인)&lt;/li>
&lt;li>C++: 예외/RTTI 비활성 → &lt;code>-fno-exceptions -fno-rtti&lt;/code>&lt;/li>
&lt;li>로그 레벨 매크로로 &lt;strong>릴리스에서 로그 제거&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#if LOG_LEVEL &amp;lt; INFO
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define LOGI(...) ((void)0)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="2-표준-라이브러리-선택">2) 표준 라이브러리 선택&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>newlib-nano&lt;/strong>: &lt;code>-specs=nano.specs&lt;/code> / &lt;code>-u _printf_float&lt;/code>(필요한 경우에만 float 지원)&lt;/li>
&lt;li>C++ iostream 대신 &lt;code>printf&lt;/code>류 사용(필요 최소한).&lt;/li>
&lt;li>동적할당 최소화: TLSF/정적 풀 등 &lt;strong>고정할당자&lt;/strong> 고려.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="3-코드-구조데이터">3) 코드 구조·데이터&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>const 데이터는 플래시에&lt;/strong>(플랫폼 매크로/속성 활용: &lt;code>__attribute__((section(&amp;quot;.rodata&amp;quot;)))&lt;/code> or &lt;code>PROGMEM&lt;/code>).&lt;/li>
&lt;li>Look-up table은 &lt;strong>압축/축소(정밀도 다운샘플)&lt;/strong> 후 해제.&lt;/li>
&lt;li>큰 구조체는 &lt;strong>비트필드&lt;/strong>/Packing, Align 비용 점검.&lt;/li>
&lt;li>템플릿/인라인 남용 자제(ROM 팽창 유발).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="4-링커-스크립트섹션">4) 링커 스크립트/섹션&lt;/h2>
&lt;ul>
&lt;li>미사용 섹션 제거(&lt;code>--gc-sections&lt;/code>)가 &lt;strong>실제 적용되는지&lt;/strong> &lt;code>nm/objdump&lt;/code>로 확인.&lt;/li>
&lt;li>Start-up/ISR 테이블 최소화, 약결 사용(weak)로 불필요 핸들러 제거.&lt;/li>
&lt;li>부트로더/앱 &lt;strong>A/B 파티션&lt;/strong> 설계 시 중복 코드를 공용화.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="5-측정-루틴">5) 측정 루틴&lt;/h2>
&lt;ul>
&lt;li>바이너리 크기: &lt;code>size firmware.elf&lt;/code>&lt;/li>
&lt;li>섹션별: &lt;code>arm-none-eabi-size -A firmware.elf&lt;/code>&lt;/li>
&lt;li>기여도 분석: &lt;code>nm --size-sort firmware.elf | tail&lt;/code> / &lt;code>objdump -d&lt;/code>&lt;/li>
&lt;li>변경 전후 비교 스크립트로 &lt;strong>회귀 감시&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="6-실무-팁">6) 실무 팁&lt;/h2>
&lt;ul>
&lt;li>최적화는 &lt;strong>측정-적용-재측정&lt;/strong> 루프. “감”으로 하지 말 것.&lt;/li>
&lt;li>기능 플래그(예: &lt;code>FEATURE_X=ON/OFF&lt;/code>)로 &lt;strong>제품 변형&lt;/strong>을 빌드타임 분기.&lt;/li>
&lt;li>OTA/로그 등 &lt;strong>운영 기능&lt;/strong>은 크기·전력·성능 트레이드오프를 명시.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="체크리스트-복붙해서-쓰세요">체크리스트 (복붙해서 쓰세요)&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;code>-Os -ffunction-sections -fdata-sections -Wl,--gc-sections&lt;/code>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;code>-flto&lt;/code> + LTO 호환 링커&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> newlib-nano / printf float 최소화&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 릴리스 로그 제거 / 예외·RTTI 비활성&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> const 데이터 플래시 고정 / LUT 최적화&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 링커 스크립트 검토 / 미사용 ISR 제거&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;code>size/nm/objdump&lt;/code> 자동 리포팅&lt;/li>
&lt;/ul>
&lt;h2 id="연계-글-예정">연계 글 (예정)&lt;/h2>
&lt;ul>
&lt;li>“부트로더 A/B + 안전 롤백 설계”&lt;/li>
&lt;li>“에너지 예산 기반 최적화(전력·성능·메모리 균형)”&lt;/li>
&lt;/ul></description></item></channel></rss>